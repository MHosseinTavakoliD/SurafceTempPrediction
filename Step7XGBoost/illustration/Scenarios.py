import matplotlib.pyplot as plt
# Detailed graph for Scenario 0
hours = range(48)
Scenarios = {
    "Scenario1":{
                    "past_surface_temp":  [89.959999, 86.539993, 87.979996, 87.440002, 88.339996, 89.239998, 85.279999, 85.279999, 85.279999, 86.720001, 88.160004, 88.160004, 88.699997, 88.880005, 89.059998, 88.160004, 88.339996, 89.059998,89.059998, 87.619995, 88.880005, 87.080002, 86.360001, 88.519997],
                    "actual_data" : [88.519997, 90.679993, 90.32, 87.979996, 91.039993, 93.559998, 94.099998, 94.82, 95.179993, 94.639999, 95., 95.899994, 96.079994, 97.339996, 98.599998, 99.679993, 100.939995, 99.679993, 97.339996, 93.379997, 89.599998, 85.279999, 84.199997, 85.279999, 88.880005],
                    "Predicted" : [87.95841,89.31662,89.921005,87.989044,87.381195,89.14889,90.071014,93.6616,92.93295,91.94987,93.92761,92.241165,94.344345,95.812164,97.73651,95.25544,93.67182,95.05122,91.27492,90.215225,87.72048,84.61028,85.217476,86.96163]
    },
    "Scenario2":{
                    "past_surface_temp":  [100.939995, 98.059998, 95.179993, 58.099998, 57.199997, 56.66, 55.580002, 59.18, 67.099998, 76.82, 85.639999, 92.120003, 97.159996, 99.679993, 100.939995, 96.260002, 90.139999, 82.759995, 75.739998, 72.32, 69.260002, 65.479996, 64.039993, 62.599998],
                    "actual_data" : [62.599998, 61.519997, 62.419998, 60.259998, 59., 57.739998, 57.919998, 60.080002, 69.080002, 77.899994, 85.82, 91.039993, 95.539993, 94.459999, 91.759995, 87.440002, 83.119995, 78.080002, 74.660004, 71.239998, 70.339996, 69.080002, 67.279999, 67.279999, 66.919998],
                    "Predicted" : [61.99035, 61.51799, 61.656445, 60.51936, 61.213375 ,61.82846, 64.22378, 73.01788, 82.33815, 90.52023, 92.53813, 97.29598, 99.440475, 96.047935, 92.46027, 86.47288, 83.53736, 80.18715, 77.40521, 72.962715, 72.01884, 71.32732, 71.50761, 70.51064]

    },
    "Scenario3":{
                    "past_surface_temp":   [44.059998, 41.540001, 36.860001, 36.860001, 44.599998, 54.860001, 58.82, 66.380005, 69.979996, 73.760002, 68.720001, 63.139999, 54.860001, 49.099998, 45.68, 43.16, 41.18, 38.48, 37.579998, 36.68, 36.32, 40.279999, 37.220001, 38.48],
                    "actual_data" : [38.48, 40.82, 35.779999, 40.459999, 44.419998, 52.699997, 59., 61.16, 62.959999, 60.98, 56.66, 54.139999, 51.98, 45.68, 42.440002, 40.279999, 39.02, 37.040001, 74.479996, 73.220001, 71.599998, 70.339996, 69.800003, 68.539993, 68.360001],
                    "Predicted" : [38.153805, 39.242374, 40.898354, 42.92903,  49.301727, 56.4576 ,  58.785667, 60.523155, 60.79935,  59.48983,  58.53446,  55.24207,  49.883266, 47.154705, 44.94727,  46.857964, 42.81715,  46.710922, 44.081535, 51.832676, 50.82493, 54.012184 ,50.18183,  45.731113]
    },
    "Scenario4":{
                        "past_surface_temp":   [48.019997, 41.900002, 34.52, 26.779999, 23.18, 22.82, 19.58, 18.860001, 23.540001, 25.34, 26.060001, 27.139999, 26.779999, 21.92, 21.559999, 23.900002, 28.940001, 37.040001, 45.139999, 50.720001, 53.599998, 53.959999, 50.900002, 48.559998],
                        "actual_data" : [48.559998, 44.059998, 41.18, 37.939999, 36.68, 35.779999, 30.559999, 33.98, 33.439999, 34.16, 33.98, 34.52, 34.34, 34.52, 34.52, 34.880001, 36.5, 37.220001, 37.759998, 38.66, 39.380001, 39.919998, 39.740002, 41.900002, 41.18],
                        "Predicted" : [43.71884,  42.206192 ,39.324463, 38.934162, 36.2086,   35.451267, 36.19572, 36.563576, 36.853657, 35.080406, 35.27504 , 34.460873 ,36.7605,   36.859238, 37.302116, 37.842754 ,40.62103  ,45.669357 ,45.505615, 42.450684, 43.0592, 42.711525 ,40.118088 ,37.3131 ]
    },
    "Scenario5":{
                        "past_surface_temp":[70.699997, 73.760002, 79.339996, 82.940002, 93.379997, 99.32, 96.079994, 96.620003, 97.520004, 95.720001, 88.339996, 83.479996, 80.599998, 78.080002, 74.839996, 73.940002, 73.220001, 72.5, 71.419998, 70.699997, 69.080002, 67.82, 67.099998, 64.940002],
                        "actual_data" :[64.940002, 64.760002, 67.279999, 68.720001, 68.899994, 69.260002, 70.339996, 70.339996, 70.699997, 70.160004, 69.619995, 69.080002, 67.82, 68.360001, 68.539993, 67.279999, 65.479996, 68.360001, 68.720001, 68.539993, 68.18, 68.539993, 69.979996, 71.419998, 73.580002],
                        "Predicted" : [64.89643,  68.295815, 69.604904, 70.73848,  70.42479,  70.7977,   72.04363, 74.78547,  75.01797,  75.32725,  75.27128,  71.40323,  70.79345,  70.624954, 67.06835,  68.32921,  69.89702,  68.51973,  68.695724 ,68.821495, 70.81529, 70.73296,  71.850815, 73.15518  ]
    },
    "Scenario6":{
                        "past_surface_temp": [33.259998, 32.18, 31.639999, 31.280001, 30.92, 30.92, 31.280001, 31.280001, 30.02, 30.380001, 30.380001, 30.380001, 30.380001, 30.559999, 30.74, 31.459999, 32.18, 32.18, 32.900002, 32.900002, 33.259998, 32.720001, 32.720001, 32.],
                        "actual_data" :[32, 31.280001, 30.02, 29.299999, 9.140001, 9.860001, 8.960001, 9.680002, 10.400002, 10.040001, 17.060001, 24.08, 31.1, 39.200001, 47.119999, 50.900002, 50.720001, 47.119999, 42.619999, 34.52, 28.940001, 25.16, 23.360001, 22.639999, 22.279999],
                        "Predicted" : [ 31.060768, 29.390305, 27.705734, 18.658504, 14.681837, 14.097885, 12.866175, 16.253113, 18.293507, 21.907434, 27.06452,  32.97003,  39.218925, 46.888523, 47.605556, 50.14742,  49.033375, 47.20672,  39.15396,  35.24541,  27.878891, 25.15855,  24.447363, 24.101385]
    },
}

title_font_size = 14
axis_label_font_size = 12
legend_font_size = 11
tick_label_font_size = 12

fig, axs = plt.subplots(2, 3, figsize=(15, 10), dpi=400)
fig.suptitle('Temperature Predictions across Scenarios', fontsize=16)
j = 0
for i, (scenario, data) in enumerate(Scenarios.items()):
    ax = axs[i // 3, i % 3]
    print (scenario, len(data['actual_data']))

    # Plotting data
    ax.plot(hours[:24], data['past_surface_temp'], label='Past Surface Temp', color='blue')
    ax.plot(hours[23:], data['actual_data'], label='Actual Data', color='green')
    ax.plot(hours[24:], data['Predicted'], label='XGBoost Predicted', color='red', linestyle='dashed')


    # Adding titles and labels
    ax.set_title(f'{scenario}')
    ax.set_xlabel('Hours',fontsize=axis_label_font_size)
    ax.set_ylabel('Temperature', fontsize=axis_label_font_size)
    if j ==0:
        ax.legend(fontsize=legend_font_size)
    j = 1
    ax.tick_params(axis='both', which='major', labelsize=tick_label_font_size)

plt.tight_layout(rect=[0, 0.03, 1, 0.95])
plt.show()
