import matplotlib.pyplot as plt
# Detailed graph for Scenario 0
hours = range(48)
Scenarios = {
    "Scenario1":{
                    "past_surface_temp":  [89.959999, 86.539993, 87.979996, 87.440002, 88.339996, 89.239998, 85.279999, 85.279999, 85.279999, 86.720001, 88.160004, 88.160004, 88.699997, 88.880005, 89.059998, 88.160004, 88.339996, 89.059998,89.059998, 87.619995, 88.880005, 87.080002, 86.360001, 88.519997],
                    "actual_data" : [88.519997, 90.679993, 90.32, 87.979996, 91.039993, 93.559998, 94.099998, 94.82, 95.179993, 94.639999, 95., 95.899994, 96.079994, 97.339996, 98.599998, 99.679993, 100.939995, 99.679993, 97.339996, 93.379997, 89.599998, 85.279999, 84.199997, 85.279999, 88.880005],
                    "Predicted" : [93.90138,  91.980446, 90.060486, 88.46041,  86.967,    86.37156,  86.31723, 86.25218,  87.44424,  88.4779, 89.985, 91.27636,  92.84078,  93.203415, 93.22417,  92.547966, 91.44082, 90.01432, 88.20305, 86.54599, 85.16744, 83.70904, 82.618034, 81.467865,]
    },
    "Scenario2":{
                    "past_surface_temp":  [100.939995, 98.059998, 95.179993, 58.099998, 57.199997, 56.66, 55.580002, 59.18, 67.099998, 76.82, 85.639999, 92.120003, 97.159996, 99.679993, 100.939995, 96.260002, 90.139999, 82.759995, 75.739998, 72.32, 69.260002, 65.479996, 64.039993, 62.599998],
                    "actual_data" : [62.599998, 61.519997, 62.419998, 60.259998, 59., 57.739998, 57.919998, 60.080002, 69.080002, 77.899994, 85.82, 91.039993, 95.539993, 94.459999, 91.759995, 87.440002, 83.119995, 78.080002, 74.660004, 71.239998, 70.339996, 69.080002, 67.279999, 67.279999, 66.919998],
                    "Predicted" : [65.2496,   62.72234,   61.183273, 60.98249,  62.796745, 67.05454, 72.87311,  80.44966,  88.28845,  95.25167, 100.21934, 102.68728, 102.501755 , 100.08679,  95.99625,  91.083855, 86.18875,  81.55799, 77.79171,  75.37672,  74.040726, 72.8505,   72.40647,  71.83595 ]

    },
    "Scenario3":{
                    "past_surface_temp":   [44.059998, 41.540001, 36.860001, 36.860001, 44.599998, 54.860001, 58.82, 66.380005, 69.979996, 73.760002, 68.720001, 63.139999, 54.860001, 49.099998, 45.68, 43.16, 41.18, 38.48, 37.579998, 36.68, 36.32, 40.279999, 37.220001, 38.48],
                    "actual_data" : [38.48, 40.82, 35.779999, 40.459999, 44.419998, 52.699997, 59., 61.16, 62.959999, 60.98, 56.66, 54.139999, 51.98, 45.68, 42.440002, 40.279999, 39.02, 37.040001, 74.479996, 73.220001, 71.599998, 70.339996, 69.800003, 68.539993, 68.360001],
                    "Predicted" : [38.723236, 41.05747,  44.32003,  48.447124, 52.923016, 57.46467,  61.32615, 63.71604,  64.50626,  63.55982,  61.095516, 57.63545 , 53.746464, 49.923874, 46.8479,   44.614326, 43.263405, 42.65781,  42.335617, 42.38217,  42.30126, 42.270016, 42.546406, 43.01181]
    },
    "Scenario4":{
                        "past_surface_temp":   [48.019997, 41.900002, 34.52, 26.779999, 23.18, 22.82, 19.58, 18.860001, 23.540001, 25.34, 26.060001, 27.139999, 26.779999, 21.92, 21.559999, 23.900002, 28.940001, 37.040001, 45.139999, 50.720001, 53.599998, 53.959999, 50.900002, 48.559998],
                        "actual_data" : [48.559998, 44.059998, 41.18, 37.939999, 36.68, 35.779999, 30.559999, 33.98, 33.439999, 34.16, 33.98, 34.52, 34.34, 34.52, 34.52, 34.880001, 36.5, 37.220001, 37.759998, 38.66, 39.380001, 39.919998, 39.740002, 41.900002, 41.18],
                        "Predicted" : [46.298668, 43.375443, 40.556717,38.155884, 36.355682, 35.197323, 34.49391, 34.344845, 34.268867, 34.216785, 33.978954, 34.061436 ,34.41418, 35.140278, 36.52199 , 38.148174 ,40.053875 ,41.87786, 43.138935 ,43.66416, 43.596634, 42.640167, 41.32279,  39.82677]
    },
    "Scenario5":{
                        "past_surface_temp":[70.699997, 73.760002, 79.339996, 82.940002, 93.379997, 99.32, 96.079994, 96.620003, 97.520004, 95.720001, 88.339996, 83.479996, 80.599998, 78.080002, 74.839996, 73.940002, 73.220001, 72.5, 71.419998, 70.699997, 69.080002, 67.82, 67.099998, 64.940002],
                        "actual_data" :[64.940002, 64.760002, 67.279999, 68.720001, 68.899994, 69.260002, 70.339996, 70.339996, 70.699997, 70.160004, 69.619995, 69.080002, 67.82, 68.360001, 68.539993, 67.279999, 65.479996, 68.360001, 68.720001, 68.539993, 68.18, 68.539993, 69.979996, 71.419998, 73.580002],
                        "Predicted" : [66.13842,  66.315735, 66.7595, 66.74861,  67.03593,  67.60359,  68.02034, 68.486145, 69.4438,   69.93421,  70.25397,  70.65078,  70.66415,  70.6882,  70.58961,  70.478226, 70.385574, 70.58053,  71.017136, 71.5185 ,  72.15485, 72.938286, 73.45963, 73.752205 ]
    },
    "Scenario6":{
                        "past_surface_temp": [33.259998, 32.18, 31.639999, 31.280001, 30.92, 30.92, 31.280001, 31.280001, 30.02, 30.380001, 30.380001, 30.380001, 30.380001, 30.559999, 30.74, 31.459999, 32.18, 32.18, 32.900002, 32.900002, 33.259998, 32.720001, 32.720001, 32.],
                        "actual_data" :[32, 31.280001, 30.02, 29.299999, 9.140001, 9.860001, 8.960001, 9.680002, 10.400002, 10.040001, 17.060001, 24.08, 31.1, 39.200001, 47.119999, 50.900002, 50.720001, 47.119999, 42.619999, 34.52, 28.940001, 25.16, 23.360001, 22.639999, 22.279999],
                        "Predicted" : [25.72886, 25.611496, 25.069826, 24.050322, 22.282608, 20.032608, 18.165668, 17.582636, 18.518757, 21.13292, 25.643694, 31.311724, 37.424545, 42.592224, 46.0313, 46.840984, 44.991627, 41.27314, 36.532448, 31.532888, 27.416859, 24.5411, 22.957249, 22.497]
    },
}

title_font_size = 14
axis_label_font_size = 12
legend_font_size = 11
tick_label_font_size = 12

fig, axs = plt.subplots(2, 3, figsize=(15, 10), dpi=400)
fig.suptitle('Temperature Predictions across Scenarios', fontsize=16)
j = 0
for i, (scenario, data) in enumerate(Scenarios.items()):
    ax = axs[i // 3, i % 3]
    print (scenario, len(data['actual_data']))

    # Plotting data
    ax.plot(hours[:24], data['past_surface_temp'], label='Past Surface Temp', color='blue')
    ax.plot(hours[23:], data['actual_data'], label='Actual Data', color='green')
    ax.plot(hours[24:], data['Predicted'], label='XGBoost Predicted', color='red', linestyle='dashed')


    # Adding titles and labels
    ax.set_title(f'{scenario}')
    ax.set_xlabel('Hours',fontsize=axis_label_font_size)
    ax.set_ylabel('Temperature', fontsize=axis_label_font_size)
    if j ==0:
        ax.legend(fontsize=legend_font_size)
    j = 1
    ax.tick_params(axis='both', which='major', labelsize=tick_label_font_size)

plt.tight_layout(rect=[0, 0.03, 1, 0.95])
plt.show()
